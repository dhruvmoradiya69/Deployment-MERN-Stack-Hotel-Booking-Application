server {
    listen 80;
    server_name localhost;

    # Define the root directory where your React app will be served
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files with caching for faster load times
    location ~* \.(png|jpg|jpeg|gif|svg|ico|webp|woff|woff2|ttf|otf|eot)$ {
        expires 6M; # Cache static assets in browser for 6 months
        access_log off;
        add_header Access-Control-Allow-Origin "*"; # Prevent CORS issues for images and fonts

        # Enable server-side caching for static assets
        proxy_cache image_cache;
        proxy_cache_valid 200 302 1h; # Cache for 1 hour at the server
        proxy_cache_valid 404 1m; # Cache missing files for 1 minute
        add_header X-Proxy-Cache $upstream_cache_status;
    }

    # Serve JavaScript, CSS, HTML, JSON with caching
    location ~* \.(js|css|html|json|map)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
        add_header Access-Control-Allow-Origin "*"; # Ensure JS and CSS files are accessible
    }

    # Preload critical images
    location = /preload.jpg {
        root /usr/share/nginx/html; # Replace with the actual directory for preload images
        add_header Link "</preload.jpg>; rel=preload; as=image";
    }

    # Handle routing for Single Page Apps (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API Requests to Backend (update with your actual backend URL if applicable)
    location /api/ {
        # proxy_pass http://backend-service:5050/api/;  # Update with your backend URL
        proxy_pass http://backend-service.mern-app-ns.svc.cluster.local:5050/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header Access-Control-Allow-Origin "*"; # Allow CORS for API requests
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS"; # Allow specific methods
        add_header Access-Control-Allow-Headers "Content-Type, Authorization"; # Allow specific headers
    }

    # Enable Gzip Compression for faster loading
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript font/woff2;
    gzip_proxied any;
    gzip_min_length 256;

    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy no-referrer-when-downgrade always;

    # Content Security Policy (CSP) allowing Stripe and Cloudinary resources
    add_header Content-Security-Policy "
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://*.stripe.com;
      style-src 'self' 'unsafe-inline' https://js.stripe.com https://*.stripe.com;
      frame-src https://js.stripe.com https://*.stripe.com;
      img-src 'self' data: https://*.cloudinary.com https://js.stripe.com https://*.stripe.com;
      connect-src 'self' https://api.stripe.com https://js.stripe.com https://*.stripe.com;
      font-src 'self' data:;
      media-src 'none';
      child-src https://js.stripe.com https://*.stripe.com;
      object-src 'none';
    " always;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Error Handling
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Server-side caching configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=image_cache:10m max_size=1g inactive=60m use_temp_path=off;
